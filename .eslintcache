[{"C:\\node_projects\\risk-ai\\src\\index.js":"1","C:\\node_projects\\risk-ai\\src\\App.js":"2","C:\\node_projects\\risk-ai\\src\\reportWebVitals.js":"3","C:\\node_projects\\risk-ai\\src\\maps\\mapEgypt.js":"4","C:\\node_projects\\risk-ai\\src\\agents\\human.js":"5","C:\\node_projects\\risk-ai\\src\\states\\game_state.js":"6","C:\\node_projects\\risk-ai\\src\\states\\territory.js":"7"},{"size":517,"mtime":1607954025085,"results":"8","hashOfConfig":"9"},{"size":3070,"mtime":1608051034968,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1607954025087,"results":"11","hashOfConfig":"9"},{"size":6481,"mtime":1608061541216,"results":"12","hashOfConfig":"9"},{"size":2775,"mtime":1608062852388,"results":"13","hashOfConfig":"9"},{"size":1637,"mtime":1608061541220,"results":"14","hashOfConfig":"9"},{"size":1690,"mtime":1608040795606,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"y16inr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\node_projects\\risk-ai\\src\\index.js",[],["34","35"],"C:\\node_projects\\risk-ai\\src\\App.js",[],"C:\\node_projects\\risk-ai\\src\\reportWebVitals.js",[],"C:\\node_projects\\risk-ai\\src\\maps\\mapEgypt.js",["36","37","38"],"import Territory from \"../states/territory\";\r\nimport egypt from \"../egypt/egypt.png\";\r\nimport \"../App.css\";\r\nconst h = 1000;\r\nconst w = 1000;\r\nconst locations = {\r\n  cairo: { x: (w * 6) / 10, y: (h * 1) / 6 },\r\n  alexandria: { x: (w * 45) / 100, y: (h * 2) / 20 },\r\n  aswan: { x: (w * 72) / 100, y: (h * 80) / 100 },\r\n  asyut: { x: (w * 57) / 100, y: (h * 45) / 100 },\r\n  beheira: { x: (w * 50) / 100, y: (h * 2) / 20 },\r\n  beni_suef: { x: (w * 50) / 100, y: (h * 28) / 100 },\r\n  dakahlia: { x: (w * 59) / 100, y: (h * 7) / 100 },\r\n  damietta: { x: (w * 61) / 100, y: (h * 3) / 100 },\r\n  faiyum: { x: (w * 50) / 100, y: (h * 25) / 100 },\r\n  gharbia: { x: (w * 55) / 100, y: (h * 8.5) / 100 },\r\n  giza: { x: w * 0.4, y: h * 0.28 },\r\n  ismailia: { x: w * 0.67, y: h * 0.12 },\r\n  kafr_el_sheikh: { x: w * 0.55, y: h * 0.04 },\r\n  matruh: { x: w * 0.25, y: h * 0.15 },\r\n  minya: { x: w * 0.5, y: h * 0.32 },\r\n  monufia: { x: w * 0.549, y: h * 0.12 },\r\n  new_valley: { x: w * 0.3, y: h * 0.65 },\r\n  north_sinai: { x: w * 0.75, y: h * 0.12 },\r\n  port_said: { x: w * 0.67, y: h * 0.06 },\r\n  qalyubia: { x: w * 0.568, y: h * 0.137 },\r\n  qena: { x: (w * 70) / 100, y: (h * 55) / 100 },\r\n  red_sea: { x: (w * 80) / 100, y: (h * 60) / 100 },\r\n  sharqia: { x: (w * 6) / 10, y: h * 0.115 },\r\n  sohag: { x: (w * 624) / 1000, y: (h * 52) / 100 },\r\n  south_sinai: { x: w * 0.8, y: h * 0.3 },\r\n  suez: { x: w * 0.65, y: h * 0.2 },\r\n  luxor: { x: w * 0.683, y: h * 0.585 },\r\n};\r\n\r\nexport default class MapEgypt {\r\n  constructor() {\r\n    let cairo = new Territory(\"cairo\");\r\n    let alexandria = new Territory(\"alexandria\");\r\n    let aswan = new Territory(\"aswan\");\r\n    let asyut = new Territory(\"asyut\");\r\n    let beheira = new Territory(\"beheira\");\r\n    let beni_suef = new Territory(\"beni_suef\");\r\n    let dakahlia = new Territory(\"dakahlia\");\r\n    let damietta = new Territory(\"damietta\");\r\n    let faiyum = new Territory(\"faiyum\");\r\n    let gharbia = new Territory(\"gharbia\");\r\n    let giza = new Territory(\"giza\");\r\n    let ismailia = new Territory(\"ismailia\");\r\n    let kafr_el_sheikh = new Territory(\"kafr_el_sheikh\");\r\n    let matruh = new Territory(\"matruh\");\r\n    let minya = new Territory(\"minya\");\r\n    let monufia = new Territory(\"monufia\");\r\n    let new_valley = new Territory(\"new_valley\");\r\n    let north_sinai = new Territory(\"north_sinai\");\r\n    let port_said = new Territory(\"port_said\");\r\n    let qalyubia = new Territory(\"qalyubia\");\r\n    let qena = new Territory(\"qena\");\r\n    let red_sea = new Territory(\"red_sea\");\r\n    let sharqia = new Territory(\"sharqia\");\r\n    let sohag = new Territory(\"sohag\");\r\n    let south_sinai = new Territory(\"south_sinai\");\r\n    let suez = new Territory(\"suez\");\r\n    let luxor = new Territory(\"luxor\");\r\n\r\n    alexandria.addAdjTerritory(beheira);\r\n    alexandria.addAdjTerritory(matruh);\r\n    matruh.addAdjTerritory(giza);\r\n    matruh.addAdjTerritory(beheira);\r\n    matruh.addAdjTerritory(new_valley);\r\n    beheira.addAdjTerritory(giza);\r\n    beheira.addAdjTerritory(kafr_el_sheikh);\r\n    beheira.addAdjTerritory(gharbia);\r\n    beheira.addAdjTerritory(monufia);\r\n    kafr_el_sheikh.addAdjTerritory(gharbia);\r\n    kafr_el_sheikh.addAdjTerritory(dakahlia);\r\n    giza.addAdjTerritory(new_valley);\r\n    giza.addAdjTerritory(minya);\r\n    giza.addAdjTerritory(beni_suef);\r\n    giza.addAdjTerritory(faiyum);\r\n    giza.addAdjTerritory(monufia);\r\n    giza.addAdjTerritory(qalyubia);\r\n    giza.addAdjTerritory(cairo);\r\n    giza.addAdjTerritory(red_sea);\r\n    giza.addAdjTerritory(suez);\r\n    gharbia.addAdjTerritory(dakahlia);\r\n    gharbia.addAdjTerritory(monufia);\r\n    dakahlia.addAdjTerritory(damietta);\r\n    dakahlia.addAdjTerritory(sharqia);\r\n    dakahlia.addAdjTerritory(qalyubia);\r\n    monufia.addAdjTerritory(qalyubia);\r\n    qalyubia.addAdjTerritory(sharqia);\r\n    qalyubia.addAdjTerritory(cairo);\r\n    cairo.addAdjTerritory(sharqia);\r\n    cairo.addAdjTerritory(ismailia);\r\n    cairo.addAdjTerritory(suez);\r\n    sharqia.addAdjTerritory(ismailia);\r\n    ismailia.addAdjTerritory(port_said);\r\n    ismailia.addAdjTerritory(north_sinai);\r\n    ismailia.addAdjTerritory(suez);\r\n    north_sinai.addAdjTerritory(suez);\r\n    north_sinai.addAdjTerritory(south_sinai);\r\n    suez.addAdjTerritory(south_sinai);\r\n    suez.addAdjTerritory(red_sea);\r\n    red_sea.addAdjTerritory(beni_suef);\r\n    red_sea.addAdjTerritory(minya);\r\n    red_sea.addAdjTerritory(asyut);\r\n    red_sea.addAdjTerritory(sohag);\r\n    red_sea.addAdjTerritory(qena);\r\n    red_sea.addAdjTerritory(aswan);\r\n    faiyum.addAdjTerritory(beni_suef);\r\n    beni_suef.addAdjTerritory(minya);\r\n    minya.addAdjTerritory(asyut);\r\n    minya.addAdjTerritory(new_valley);\r\n    new_valley.addAdjTerritory(asyut);\r\n    new_valley.addAdjTerritory(sohag);\r\n    new_valley.addAdjTerritory(qena);\r\n    new_valley.addAdjTerritory(luxor);\r\n    new_valley.addAdjTerritory(aswan);\r\n    asyut.addAdjTerritory(sohag);\r\n    sohag.addAdjTerritory(qena);\r\n    qena.addAdjTerritory(luxor);\r\n    qena.addAdjTerritory(aswan);\r\n\r\n    this.territories = [\r\n      cairo,\r\n      alexandria,\r\n      aswan,\r\n      asyut,\r\n      beheira,\r\n      beni_suef,\r\n      dakahlia,\r\n      damietta,\r\n      faiyum,\r\n      gharbia,\r\n      giza,\r\n      ismailia,\r\n      kafr_el_sheikh,\r\n      matruh,\r\n      minya,\r\n      monufia,\r\n      new_valley,\r\n      north_sinai,\r\n      port_said,\r\n      qalyubia,\r\n      qena,\r\n      red_sea,\r\n      sharqia,\r\n      sohag,\r\n      south_sinai,\r\n      suez,\r\n      luxor,\r\n    ];\r\n\r\n    this.initialArmy = 20;\r\n  }\r\n\r\n  getTerritories() {\r\n    return this.territories;\r\n  }\r\n\r\n  getInitialArmy() {\r\n    return this.initialArmy;\r\n  }\r\n  renderMap(selectHandler, selecting, attacker, victim) {\r\n    return (\r\n      <div className=\"map\">\r\n        {this.territories.map((t) => {\r\n          let bg_color =\r\n            attacker && t.name == attacker.name\r\n              ? \"green\"\r\n              : victim && t.name == victim.name\r\n              ? \"red\"\r\n              : t.player != null\r\n              ? t.player.color\r\n              : \"turquoise\";\r\n          return (\r\n            <button\r\n              className={\"territoryBtn\"}\r\n              style={{\r\n                top: locations[t.name].y,\r\n                left: locations[t.name].x,\r\n                backgroundColor: bg_color,\r\n              }}\r\n              disabled={!selecting}\r\n              onClick={() => selectHandler(t)}\r\n            >\r\n              {t.army}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\node_projects\\risk-ai\\src\\agents\\human.js",["39","40"],"C:\\node_projects\\risk-ai\\src\\states\\game_state.js",["41","42","43","44","45"],"import * as React from \"react\";\r\nimport \"../App.css\";\r\nimport egypt from \"../egypt/egypt.png\";\r\n\r\nexport default class GameState extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.player1 = props.player1;\r\n    this.player2 = props.player2;\r\n\r\n    this.state = {\r\n      turn: 0,\r\n      attacker: null,\r\n      victim: null,\r\n      selecting: null,\r\n      map: props.map,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state);\r\n  }\r\n\r\n  attack() {\r\n    if (this.state.turn == 0) {\r\n      this.player1.attack(this);\r\n    } else {\r\n      this.player2.attack(this);\r\n    }\r\n  }\r\n\r\n  assignArmy() {\r\n    if (this.state.turn == 0) {\r\n      this.player1.assignArmy(this);\r\n    } else {\r\n      this.player2.assignArmy(this);\r\n    }\r\n  }\r\n\r\n  endTurn() {\r\n    let turn = this.state.turn == 0 ? 1 : 0;\r\n    this.setState({ turn: turn });\r\n    this.assignArmy();\r\n  }\r\n\r\n  selectTerritory(type, callback) {\r\n    this.setState({ selecting: type });\r\n    this.callback = callback;\r\n  }\r\n  getMap() {\r\n    return this.state.map;\r\n  }\r\n\r\n  setMap(map) {\r\n    this.setState({ map });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"gameContainer\"}>\r\n        {this.state.map.renderMap(\r\n          (territory) => {\r\n            if (this.state.selecting == \"attack\") {\r\n              this.setState({ attacker: territory });\r\n            } else {\r\n              this.setState({ victim: territory });\r\n            }\r\n            this.callback(territory);\r\n          },\r\n          this.state.selecting,\r\n          this.state.attacker,\r\n          this.state.victim\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\node_projects\\risk-ai\\src\\states\\territory.js",["46","47","48","49"],"export default class Territory {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.player = null;\r\n    this.army = 0;\r\n    this.adj = [];\r\n  }\r\n\r\n  setPlayer(player) {\r\n    this.player = player;\r\n  }\r\n  getPlayer() {\r\n    return this.player;\r\n  }\r\n\r\n  addArmy(army) {\r\n    this.army += army;\r\n  }\r\n  removeArmy(army) {\r\n    this.army -= army;\r\n    if (this.army <= 0) return true; // player lost this territory\r\n    return false; //player still owns this territory\r\n  }\r\n  getArmy() {\r\n    return this.army;\r\n  }\r\n\r\n  addAdjTerritory(territory) {\r\n    this.adj.push(territory);\r\n    if (!territory.isAdj(this.name)) {\r\n      territory.addAdjTerritory(this);\r\n    }\r\n  }\r\n  removeAdjTerritory(name) {\r\n    let index = -1;\r\n    this.adj.forEach((t, i) => {\r\n      if (t.name == name) {\r\n        index = i;\r\n        return;\r\n      }\r\n    });\r\n    this.adj.splice(index, 1);\r\n  }\r\n  getAdj() {\r\n    return this.adj;\r\n  }\r\n\r\n  getAdjEnimy() {}\r\n\r\n  getAdjOwned() {}\r\n\r\n  getName() {\r\n    return this.name;\r\n  }\r\n\r\n  isAdj(name) {\r\n    return this.adj.find((t) => t.name == name) != null;\r\n  }\r\n\r\n  getAdjTerritory(name) {\r\n    return this.adj.find((t) => t.name == name);\r\n  }\r\n\r\n  manoeuvreToAdjTerritory(army, name) {\r\n    if (army >= this.army) return false;\r\n    if (!this.isAdj(name)) return false;\r\n    let t = this.getAdjTerritory(name);\r\n    if (t.player != this.player) return false;\r\n    t.addArmy(army);\r\n    this.removeArmy(army);\r\n  }\r\n\r\n  findPathToTerritory(name) {\r\n    //there is a path between 2 territories if all the territories in the path are owned by the same player\r\n  }\r\n\r\n  manoeuvreToRemoteTerritory(name) {\r\n    //find path, move army to the territory\r\n  }\r\n}\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":170,"column":32,"nodeType":"60","messageId":"61","endLine":170,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":172,"column":34,"nodeType":"60","messageId":"61","endLine":172,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":43,"column":17,"nodeType":"60","messageId":"61","endLine":43,"endColumn":19},{"ruleId":"58","severity":1,"message":"62","line":61,"column":38,"nodeType":"60","messageId":"61","endLine":61,"endColumn":40},{"ruleId":"54","severity":1,"message":"55","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":25,"column":25,"nodeType":"60","messageId":"61","endLine":25,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":33,"column":25,"nodeType":"60","messageId":"61","endLine":33,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":41,"column":32,"nodeType":"60","messageId":"61","endLine":41,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":63,"column":38,"nodeType":"60","messageId":"61","endLine":63,"endColumn":40},{"ruleId":"58","severity":1,"message":"59","line":37,"column":18,"nodeType":"60","messageId":"61","endLine":37,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":57,"column":40,"nodeType":"60","messageId":"61","endLine":57,"endColumn":42},{"ruleId":"58","severity":1,"message":"59","line":61,"column":40,"nodeType":"60","messageId":"61","endLine":61,"endColumn":42},{"ruleId":"58","severity":1,"message":"62","line":68,"column":18,"nodeType":"60","messageId":"61","endLine":68,"endColumn":20},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'egypt' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]